int l1,l2=0;
int h1=A.length-1;
int h2=B.length-1;

BiTree PreInCreate(ElemType A[],ElemType B[],int l1,int l2,int h1,int h2){
	root=(BiTNode*)malloc(sizeof(BiTNode));
	root->data=A[l1];
	for(int i=0;B[i]!=root->data;i++);
	int llen=i-l1;
	int rlen=h2-i;
	if(llen)
		root->lchild=PreInCreate(A,B,l1+1,l1+llen,l2,l2+llen-1);
	else
		root->lchild=NULL;
	if(rlen)
		root->rchild=PreInCreate(A,B,h1-rlen+1,h1,h2-rlen+1,h2);
	else
		root->rchild=NULL;
	return root;
}

//8行一开始用的while(B[l2]!=root->data) l2++;
//但是l1,l2,h1,h2除了在递归嵌套中使用不建议在途中使用
//而6个参数的嵌套递归调用确是没看懂

void CreateBiTree(int A[],int B[],int l1,int l2,int h1,int h2){
	if(l1<h1||l2<h2)
		return false;
	int llen,rlen;
	int i,j,k=0;
	int p=(BiTree*)malloc(sizeof(BiTree));
	p->data=A[l1];
	while(B[i]!=p->data)
		i++;
	llen=i-l1;
	rlen=h1-i;
	CreateBiTree(A[],B[],l1+1,l2,l1+llen-1,l2+llen-1);
	CreateBiTree(A[],B[],h1-rlen,h2-rlen,h1,h2;
}
//九牛二虎之力写出来的给👴爪巴的代码
//再来吧
